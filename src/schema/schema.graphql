type Query {
  hello: String!
  helloWithName(name: String!): String!
  helloToGraphQLCourse: String!
  list: [String]
  characters: [Character!]!
  character(id: ID!): Character
}

type Character {
  id: ID!
  name: String!
  actor: String!
  description: String!
  total_episodes: Int!
  photo: String!
  votes: Int!
  url: String!
}

type ResultOperation {
  status: Boolean!
  message: String!
  characters: [Character!]!
}

type Mutation {
  addVote(character: ID!): ResultOperation!
  updateVote(id: ID!, character: ID!): ResultOperation!
  deleteVote(id: ID!): ResultOperation!
}

type Subscription {
  changeVotes: [Character!]!
}
